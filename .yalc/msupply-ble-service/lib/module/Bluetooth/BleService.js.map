{"version":3,"sources":["BleService.ts"],"names":["Buffer","BLUE_MAESTRO","BLUETOOTH","ScanMode","LogLevel","BleService","constructor","manager","utils","macAddress","connectToDevice","isDeviceConnected","cancelDeviceConnection","device","discoverAllServicesAndCharacteristicsForDevice","stopDeviceScan","callback","scanOptions","scanMode","LowLatency","startDeviceScan","console","log","logLevel","then","value","command","writeCharacteristicWithoutResponseForDevice","UART_SERVICE_UUID","READ_CHARACTERISTIC_UUID","base64FromString","Promise","resolve","reject","monitorCharacteristicForDevice","WRITE_CHARACTERISTIC_UUID","_","result","parser","data","monitoringCallback","push","e","Error","message","monitor","monitorCharacteristic","writeCharacteristic","monitorCharacteristicCallback","connectAndDiscoverServices","monitorCallback","buffer","concat","slice","map","datum","bufferFromBase64","ind","findIndex","i","readInt16BE","DELIMITER_A","DELIMITER_B","reduce","acc","index","temperature","TEMPERATURE_DIVISOR","writeAndMonitor","COMMANDS","DOWNLOAD","logInterval","writeWithSingleResponse","UPDATE_LOG_INTERVAL","stringFromBase64","match","BLINK","monitorResultCallback","parsedBase64","defaultInfoLog","batteryLevel","isDisabled","parsedBatteryLevel","info","batteryLevelStringOrNull","Number","isNaN","normaliseNumber","parsedIsDisabled","INFO","DISABLE_BUTTON","retriesLeft","error","getInfo","catch","err","getInfoWithRetries","toggleButton","toggleButtonWithRetries","downloadLogs","downloadLogsWithRetries","blink","blinkWithRetries","updateLogInterval","updateLogIntervalWithRetries","setLogLevel","Verbose"],"mappings":"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","sourcesContent":["import { BTUtilService } from '../BTUtilService';\n\nimport { Buffer } from 'buffer';\nimport { BLUE_MAESTRO, BLUETOOTH } from '../index';\nimport { MacAddress } from '../types/common';\nimport {\n  Characteristic,\n  ScanOptions,\n  ScanMode,\n  BluetoothDevice,\n  InfoLog,\n  MonitorCharacteristicCallback,\n  MonitorCharacteristicParser,\n  ScanCallback,\n  SensorLog,\n  LogLevel,\n} from './types';\nimport { BluetoothManager } from './BleManager';\n\nexport class BleService {\n  manager: BluetoothManager;\n  utils: BTUtilService;\n\n  constructor(manager: BluetoothManager, utils: BTUtilService) {\n    this.manager = manager;\n    manager.setLogLevel(LogLevel.Verbose);\n    // In the future we may want to use our own utils,\n    //  not the ones passed in from the app.\n    //this.utils = new BTUtilService();\n    this.utils = utils;\n  }\n\n  connectToDevice = async (macAddress: MacAddress): Promise<BluetoothDevice> => {\n    return this.manager.connectToDevice(macAddress);\n  };\n\n  connectAndDiscoverServices = async (macAddress: MacAddress): Promise<BluetoothDevice> => {\n    if (await this.manager.isDeviceConnected(macAddress)) {\n      await this.manager.cancelDeviceConnection(macAddress);\n    }\n\n    const device = await this.connectToDevice(macAddress);\n    await this.manager.discoverAllServicesAndCharacteristicsForDevice(macAddress);\n\n    return device;\n  };\n\n  stopScan = (): void => {\n    this.manager.stopDeviceScan();\n  };\n\n  scanForSensors = (callback: ScanCallback): void => {\n    const scanOptions: ScanOptions = { scanMode: ScanMode.LowLatency };\n    this.manager.startDeviceScan(null, scanOptions, callback);\n    console.log('Started scan');\n    this.manager.logLevel().then(value => console.log(`Log Level ${value}`));\n  };\n\n  writeCharacteristic = async (\n    macAddress: MacAddress,\n    command: string\n  ): Promise<Characteristic> => {\n    return this.manager.writeCharacteristicWithoutResponseForDevice(\n      macAddress,\n      BLUETOOTH.UART_SERVICE_UUID,\n      BLUETOOTH.READ_CHARACTERISTIC_UUID,\n      this.utils.base64FromString(command)\n    );\n  };\n\n  monitorCharacteristic = (\n    macAddress: MacAddress,\n    callback: MonitorCharacteristicCallback<boolean | SensorLog[] | InfoLog>\n  ): Promise<boolean | SensorLog[] | InfoLog> => {\n    return new Promise((resolve, reject) => {\n      this.manager.monitorCharacteristicForDevice(\n        macAddress,\n        BLUETOOTH.UART_SERVICE_UUID,\n        BLUETOOTH.WRITE_CHARACTERISTIC_UUID,\n        (_, result) => {\n          callback(result, resolve, reject);\n        }\n      );\n    });\n  };\n\n  writeAndMonitor = async (\n    macAddress: MacAddress,\n    command: string,\n    parser: MonitorCharacteristicParser<string[], SensorLog[] | InfoLog>\n  ): Promise<boolean | InfoLog | SensorLog[]> => {\n    const data: string[] = [];\n\n    const monitoringCallback: MonitorCharacteristicCallback<SensorLog[] | InfoLog> = (\n      result,\n      resolve,\n      reject\n    ) => {\n      if (result?.value) data.push(result.value);\n      else {\n        try {\n          resolve(parser(data));\n        } catch (e) {\n          reject(new Error(`Parsing failed: ${e.message}`));\n        }\n      }\n    };\n\n    const monitor = this.monitorCharacteristic(macAddress, monitoringCallback);\n    await this.writeCharacteristic(macAddress, command);\n\n    return monitor;\n  };\n\n  writeWithSingleResponse = async (\n    macAddress: MacAddress,\n    command: string,\n    parser: MonitorCharacteristicParser<string, boolean>\n  ): Promise<boolean | InfoLog | SensorLog[]> => {\n    const monitorCharacteristicCallback: MonitorCharacteristicCallback<boolean> = (\n      result,\n      resolve,\n      reject\n    ) => {\n      if (result?.value) {\n        try {\n          resolve(parser(result.value));\n        } catch (e) {\n          reject(new Error(`Parsing failed: ${e.message}`));\n        }\n      } else reject(new Error(`Command Failed`));\n    };\n\n    const monitor = this.monitorCharacteristic(macAddress, monitorCharacteristicCallback);\n    await this.writeCharacteristic(macAddress, command);\n\n    return monitor;\n  };\n\n  downloadLogs = async (macAddress: MacAddress): Promise<SensorLog[]> => {\n    await this.connectAndDiscoverServices(macAddress);\n\n    const monitorCallback: MonitorCharacteristicParser<string[], SensorLog[]> = (\n      data: string[]\n    ) => {\n      const buffer = Buffer.concat(data.slice(1).map(datum => this.utils.bufferFromBase64(datum)));\n\n      const ind = buffer.findIndex(\n        (_, i) =>\n          (i % 2 === 0 && buffer.readInt16BE(i) === BLUE_MAESTRO.DELIMITER_A) ||\n          buffer.readInt16BE(i) === BLUE_MAESTRO.DELIMITER_B\n      );\n\n      return (buffer.slice(0, ind) as Buffer).reduce((acc: SensorLog[], _, index) => {\n        if (index % 2 !== 0) return acc;\n        return [\n          ...acc,\n          {\n            temperature: buffer.readInt16BE(index) / BLUE_MAESTRO.TEMPERATURE_DIVISOR,\n          },\n        ];\n      }, []);\n    };\n\n    const result = (await this.writeAndMonitor(\n      macAddress,\n      BLUE_MAESTRO.COMMANDS.DOWNLOAD,\n      monitorCallback\n    )) as SensorLog[];\n\n    return result;\n  };\n\n  updateLogInterval = async (macAddress: MacAddress, logInterval: number): Promise<boolean> => {\n    await this.connectAndDiscoverServices(macAddress);\n    const result = await this.writeWithSingleResponse(\n      macAddress,\n      `${BLUE_MAESTRO.COMMANDS.UPDATE_LOG_INTERVAL}${logInterval}`,\n      data => !!this.utils.stringFromBase64(data).match(/interval/i)\n    );\n    return !!result;\n  };\n\n  blink = async (macAddress: MacAddress): Promise<boolean> => {\n    await this.connectAndDiscoverServices(macAddress);\n\n    const result = (await this.writeWithSingleResponse(\n      macAddress,\n      BLUE_MAESTRO.COMMANDS.BLINK,\n      data => {\n        return !!this.utils.stringFromBase64(data).match(/ok/i);\n      }\n    )) as boolean;\n\n    return result;\n  };\n\n  getInfo = async (macAddress: MacAddress): Promise<InfoLog> => {\n    await this.connectAndDiscoverServices(macAddress);\n\n    const monitorResultCallback: MonitorCharacteristicParser<string[], InfoLog> = data => {\n      const parsedBase64 = data.map(this.utils.stringFromBase64);\n      const defaultInfoLog: InfoLog = { batteryLevel: null, isDisabled: true };\n\n      const parsedBatteryLevel = (info: string): number | null => {\n        const batteryLevelStringOrNull = info.match(/Batt lvl: [0-9]{1,3}/);\n\n        if (!batteryLevelStringOrNull) return batteryLevelStringOrNull;\n\n        const batteryLevel = Number(batteryLevelStringOrNull[0].match(/[0-9]{1,3}/));\n\n        return Number.isNaN(batteryLevel)\n          ? null\n          : this.utils.normaliseNumber(batteryLevel, [70, 100]);\n      };\n\n      const parsedIsDisabled = (info: string): boolean => !!info.match(/Btn on\\/off: 1/);\n\n      return parsedBase64.reduce((acc, info) => {\n        const isDisabled = parsedIsDisabled(info);\n        const batteryLevel = parsedBatteryLevel(info);\n\n        if (isDisabled) return { ...acc, isDisabled };\n        if (batteryLevel) return { ...acc, batteryLevel };\n\n        return acc;\n      }, defaultInfoLog);\n    };\n\n    const result: InfoLog = (await this.writeAndMonitor(\n      macAddress,\n      BLUE_MAESTRO.COMMANDS.INFO,\n      monitorResultCallback\n    )) as InfoLog;\n\n    return result;\n  };\n\n  toggleButton = async (macAddress: MacAddress): Promise<boolean> => {\n    await this.connectAndDiscoverServices(macAddress);\n    const result = (await this.writeWithSingleResponse(\n      macAddress,\n      BLUE_MAESTRO.COMMANDS.DISABLE_BUTTON,\n      data => {\n        return !!this.utils.stringFromBase64(data).match(/ok/i);\n      }\n    )) as boolean;\n    return result;\n  };\n\n  getInfoWithRetries = async (\n    macAddress: MacAddress,\n    retriesLeft: number,\n    error: Error | null\n  ): Promise<InfoLog> => {\n    if (!retriesLeft) throw error;\n\n    return this.getInfo(macAddress).catch(err =>\n      this.getInfoWithRetries(macAddress, retriesLeft - 1, err)\n    );\n  };\n\n  toggleButtonWithRetries = async (\n    macAddress: MacAddress,\n    retriesLeft: number,\n    error: Error | null\n  ): Promise<boolean> => {\n    if (!retriesLeft) throw error;\n\n    return this.toggleButton(macAddress).catch(err =>\n      this.toggleButtonWithRetries(macAddress, retriesLeft - 1, err)\n    );\n  };\n\n  downloadLogsWithRetries = async (\n    macAddress: MacAddress,\n    retriesLeft: number,\n    error: Error | null\n  ): Promise<SensorLog[]> => {\n    if (!retriesLeft) throw error;\n\n    return this.downloadLogs(macAddress).catch(err =>\n      this.downloadLogsWithRetries(macAddress, retriesLeft - 1, err)\n    );\n  };\n\n  blinkWithRetries = async (\n    macAddress: MacAddress,\n    retriesLeft: number,\n    error: Error | null\n  ): Promise<boolean> => {\n    if (!retriesLeft) throw error;\n\n    return this.blink(macAddress).catch(err =>\n      this.blinkWithRetries(macAddress, retriesLeft - 1, err)\n    );\n  };\n\n  updateLogIntervalWithRetries = async (\n    macAddress: MacAddress,\n    logInterval: number,\n    retriesLeft: number,\n    error: Error | null\n  ): Promise<boolean> => {\n    if (!retriesLeft) throw error;\n\n    return this.updateLogInterval(macAddress, logInterval).catch(err =>\n      this.updateLogIntervalWithRetries(macAddress, logInterval, retriesLeft - 1, err)\n    );\n  };\n}\n"]}